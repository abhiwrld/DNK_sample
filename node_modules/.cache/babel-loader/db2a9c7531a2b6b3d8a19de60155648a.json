{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Asus\\\\Desktop\\\\DNK-SIH\\\\dnk-booking-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\DNK-SIH\\\\dnk-booking-app\\\\src\\\\components\\\\BulkUpload.js\";\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nvar BulkUpload = function BulkUpload() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    csvContent = _useState2[0],\n    setCsvContent = _useState2[1];\n  var handleFileUpload = function handleFileUpload(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = function (e) {\n      var content = e.target.result;\n      setCsvContent(content);\n    };\n    reader.readAsText(file);\n  };\n  var getRandomColor = function getRandomColor() {\n    var colors = ['red', 'lightgreen'];\n    var randomIndex = Math.floor(Math.random() * colors.length);\n    return colors[randomIndex];\n  };\n  var renderCsvAsTable = function renderCsvAsTable() {\n    if (!csvContent) return null;\n    var lines = csvContent.split('\\n');\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, lines.map(function (line, index) {\n      var data = line.split(',');\n      var rowColor = getRandomColor();\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        style: {\n          backgroundColor: rowColor\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, data.map(function (cell, cellIndex) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: cellIndex,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }\n        }, cell);\n      }));\n    })));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".csv\",\n    onChange: handleFileUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, renderCsvAsTable()), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/declaration\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: '.8vw',\n      padding: '.8vw',\n      backgroundColor: 'Green',\n      color: '#ffffff',\n      border: '0',\n      marginTop: '3vh'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Save\")));\n};\nexport default BulkUpload;","map":{"version":3,"names":["React","useState","NavLink","BulkUpload","_useState","_useState2","_slicedToArray","csvContent","setCsvContent","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","content","result","readAsText","getRandomColor","colors","randomIndex","Math","floor","random","length","renderCsvAsTable","lines","split","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","line","index","data","rowColor","key","style","backgroundColor","cell","cellIndex","type","accept","onChange","to","fontSize","padding","color","border","marginTop"],"sources":["C:/Users/Asus/Desktop/DNK-SIH/dnk-booking-app/src/components/BulkUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst BulkUpload = () => {\r\n  const [csvContent, setCsvContent] = useState(null);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const content = e.target.result;\r\n      setCsvContent(content);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const getRandomColor = () => {\r\n    const colors = ['red', 'lightgreen'];\r\n    const randomIndex = Math.floor(Math.random() * colors.length);\r\n    return colors[randomIndex];\r\n  };\r\n\r\n  const renderCsvAsTable = () => {\r\n    if (!csvContent) return null;\r\n\r\n    const lines = csvContent.split('\\n');\r\n\r\n    return (\r\n      <table>\r\n        <tbody>\r\n          {lines.map((line, index) => {\r\n            const data = line.split(',');\r\n            const rowColor = getRandomColor();\r\n            return (\r\n              <tr key={index} style={{ backgroundColor: rowColor }}>\r\n                {data.map((cell, cellIndex) => (\r\n                  <td key={cellIndex}>{cell}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n      <div>{renderCsvAsTable()}</div>\r\n      <NavLink to='/declaration'>\r\n              <button style = {{fontSize:'.8vw',padding:'.8vw',backgroundColor:'Green',color:'#ffffff',border:'0', marginTop:'3vh'}}>Save</button>\r\n          </NavLink>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default BulkUpload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}