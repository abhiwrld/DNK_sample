{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\DNK-SIH\\\\dnk-booking-app\\\\src\\\\components\\\\ArticleBooking.js\";\n// import React, { useState } from 'react';\n\n// const ArticleUpload = () => {\n\n//   const [formData, setFormData] = useState([]);\n//   const [csvHeaders, setCSVHeaders] = useState([]);\n\n//   const handleFileUpload = (e) => {\n//     const file = e.target.files[0];\n//     const reader = new FileReader();\n\n//     reader.onload = (event) => {\n//       const csvData = event.target.result;\n//       const [header, ...rows] = csvData.split('\\n');\n//       const headers = header.split(',');\n\n//       const data = rows.map((row) => {\n//         const values = row.split(',');\n//         return headers.reduce((acc, header, index) => {\n//           acc[header] = values[index];\n//           return acc;\n//         }, {});\n//       });\n\n//       setFormData(data);\n//       setCSVHeaders(headers);\n//     };\n\n//     reader.readAsText(file);\n//   };\n\n//   const handleChange = (e, index) => {\n//     const { name, value } = e.target;\n//     const updatedFormData = [...formData];\n//     updatedFormData[index][name] = value;\n//     setFormData(updatedFormData);\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n//       <form onSubmit>\n//         {formData.map((data, index) => (\n//           <div key={index}>\n//             {csvHeaders.map((header) => (\n//               <React.Fragment key={header}>\n//                 <input\n//                   type=\"text\"\n//                   name={header}\n//                   placeholder={header}\n//                   value={data[header] || ''}\n//                   onChange={(e) => handleChange(e, index)}\n//                 />\n//                 <span>{header === 'response' ? data[header] : ''}</span>\n//               </React.Fragment>\n//             ))}\n//             <br />\n//           </div>\n//         ))}\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ArticleUpload;\nimport React, { useState } from 'react';\nvar ArticleUpload = function ArticleUpload() {\n  // Existing code...\n\n  var handleExportToCSV = function handleExportToCSV() {\n    var csvContent = \"data:text/csv;charset=utf-8,\".concat(csvHeaders.join(','), \"\\n\").concat(formData.map(function (data) {\n      return csvHeaders.map(function (header) {\n        return data[header] || '';\n      }).join(',');\n    }).join('\\n'));\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement('a');\n    link.setAttribute('href', encodedUri);\n    link.setAttribute('download', 'export.csv');\n    document.body.appendChild(link);\n    link.click();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExportToCSV,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Export to CSV\"));\n};\nexport default ArticleUpload;","map":{"version":3,"names":["React","useState","ArticleUpload","handleExportToCSV","csvContent","concat","csvHeaders","join","formData","map","data","header","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/Asus/Desktop/DNK-SIH/dnk-booking-app/src/components/ArticleBooking.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const ArticleUpload = () => {\r\n\r\n\r\n\r\n//   const [formData, setFormData] = useState([]);\r\n//   const [csvHeaders, setCSVHeaders] = useState([]);\r\n\r\n//   const handleFileUpload = (e) => {\r\n//     const file = e.target.files[0];\r\n//     const reader = new FileReader();\r\n\r\n//     reader.onload = (event) => {\r\n//       const csvData = event.target.result;\r\n//       const [header, ...rows] = csvData.split('\\n');\r\n//       const headers = header.split(',');\r\n\r\n//       const data = rows.map((row) => {\r\n//         const values = row.split(',');\r\n//         return headers.reduce((acc, header, index) => {\r\n//           acc[header] = values[index];\r\n//           return acc;\r\n//         }, {});\r\n//       });\r\n\r\n//       setFormData(data);\r\n//       setCSVHeaders(headers);\r\n//     };\r\n\r\n//     reader.readAsText(file);\r\n//   };\r\n\r\n//   const handleChange = (e, index) => {\r\n//     const { name, value } = e.target;\r\n//     const updatedFormData = [...formData];\r\n//     updatedFormData[index][name] = value;\r\n//     setFormData(updatedFormData);\r\n//   };\r\n\r\n  \r\n//   return (\r\n//     <div>\r\n//       <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\r\n//       <form onSubmit>\r\n//         {formData.map((data, index) => (\r\n//           <div key={index}>\r\n//             {csvHeaders.map((header) => (\r\n//               <React.Fragment key={header}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name={header}\r\n//                   placeholder={header}\r\n//                   value={data[header] || ''}\r\n//                   onChange={(e) => handleChange(e, index)}\r\n//                 />\r\n//                 <span>{header === 'response' ? data[header] : ''}</span>\r\n//               </React.Fragment>\r\n//             ))}\r\n//             <br />\r\n//           </div>\r\n//         ))}\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ArticleUpload;\r\nimport React, { useState } from 'react';\r\n\r\nconst ArticleUpload = () => {\r\n  // Existing code...\r\n\r\n  const handleExportToCSV = () => {\r\n    const csvContent = `data:text/csv;charset=utf-8,${csvHeaders.join(',')}\\n${formData.map(data => csvHeaders.map(header => data[header] || '').join(',')).join('\\n')}`;\r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', encodedUri);\r\n    link.setAttribute('download', 'export.csv');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Existing code... */}\r\n\r\n      <button onClick={handleExportToCSV}>Export to CSV</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleUpload;\r\n"],"mappings":";;AAAA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B;;EAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAMC,UAAU,kCAAAC,MAAA,CAAkCC,UAAU,CAACC,IAAI,CAAC,GAAG,CAAC,QAAAF,MAAA,CAAKG,QAAQ,CAACC,GAAG,CAAC,UAAAC,IAAI;MAAA,OAAIJ,UAAU,CAACG,GAAG,CAAC,UAAAE,MAAM;QAAA,OAAID,IAAI,CAACC,MAAM,CAAC,IAAI,EAAE;MAAA,EAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;IAAA,EAAC,CAACA,IAAI,CAAC,IAAI,CAAC,CAAE;IACpK,IAAMK,UAAU,GAAGC,SAAS,CAACT,UAAU,CAAC;IACxC,IAAMU,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEL,UAAU,CAAC;IACrCE,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC;IAC3CF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;IAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;EACd,CAAC;EAED,oBACEpB,KAAA,CAAAgB,aAAA;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAGE3B,KAAA,CAAAgB,aAAA;IAAQY,OAAO,EAAEzB,iBAAkB;IAAAkB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAqB,CACtD,CAAC;AAEV,CAAC;AAED,eAAezB,aAAa"},"metadata":{},"sourceType":"module"}